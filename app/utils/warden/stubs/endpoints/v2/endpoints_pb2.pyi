"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
from builtins import (
    bool,
    int,
    type,
)

from google.protobuf.descriptor import (
    Descriptor,
    EnumDescriptor,
    FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    EnumTypeWrapper,
)

from google.protobuf.message import (
    Message,
)

from chema.google.protobuf.timestamp_pb2 import (
    Timestamp,
)

from typing import (
    Iterable,
    NewType,
    Optional,
    Text,
)

from typing_extensions import (
    Literal,
    TypeAlias,
)


DESCRIPTOR: FileDescriptor


_FilterMode: _FilterMode

class _FilterMode:
    ValueType = NewType('ValueType', int)
    V: TypeAlias = ValueType

_FilterModeEnumTypeWrapper: _FilterModeEnumTypeWrapper

class _FilterModeEnumTypeWrapper(EnumTypeWrapper[_FilterMode.ValueType], type):
    DESCRIPTOR: EnumDescriptor
    Undefined: _FilterMode.ValueType  # 0
    Auto: _FilterMode.ValueType  # 1
    Local: _FilterMode.ValueType  # 2
    All: _FilterMode.ValueType  # 3
    DCPriority: _FilterMode.ValueType  # 4

FilterMode: FilterMode

class FilterMode(_FilterMode, metaclass=_FilterModeEnumTypeWrapper):
    pass

Undefined: FilterMode.ValueType  # 0
Auto: FilterMode.ValueType  # 1
Local: FilterMode.ValueType  # 2
All: FilterMode.ValueType  # 3
DCPriority: FilterMode.ValueType  # 4


Locality: Locality

class Locality(Message):
    DESCRIPTOR: Descriptor
    REGION_FIELD_NUMBER: int
    ZONE_FIELD_NUMBER: int
    SUB_ZONE_FIELD_NUMBER: int
    region: Text
    zone: Text
    sub_zone: Text
    def __init__(self,
        *,
        region: Text = ...,
        zone: Text = ...,
        sub_zone: Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal["region",b"region","sub_zone",b"sub_zone","zone",b"zone"]) -> None: ...


UpdateInfo: UpdateInfo

class UpdateInfo(Message):
    DESCRIPTOR: Descriptor
    LOCAL_VERSION_ID_FIELD_NUMBER: int
    EVENT_TS_FIELD_NUMBER: int
    STATE_HASH_FIELD_NUMBER: int
    local_version_id: int
    @property
    def event_ts(self) -> Timestamp: ...
    state_hash: int
    def __init__(self,
        *,
        local_version_id: int = ...,
        event_ts: Optional[Timestamp] = ...,
        state_hash: int = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["event_ts",b"event_ts"]) -> bool: ...
    def ClearField(self, field_name: Literal["event_ts",b"event_ts","local_version_id",b"local_version_id","state_hash",b"state_hash"]) -> None: ...


ApplicationRequest: ApplicationRequest

class ApplicationRequest(Message):
    DESCRIPTOR: Descriptor
    class SubsettingOptions(Message):
        DESCRIPTOR: Descriptor
        DISABLED_FIELD_NUMBER: int
        disabled: bool
        def __init__(self,
            *,
            disabled: Optional[bool] = ...,
            ) -> None: ...
        def HasField(self, field_name: Literal["_disabled",b"_disabled","disabled",b"disabled"]) -> bool: ...
        def ClearField(self, field_name: Literal["_disabled",b"_disabled","disabled",b"disabled"]) -> None: ...
        def WhichOneof(self, oneof_group: Literal["_disabled",b"_disabled"]) -> Optional[Literal["disabled"]]: ...

    class ClientInfo(Message):
        DESCRIPTOR: Descriptor
        CLIENT_VERSION_FIELD_NUMBER: int
        PLATFORM_FIELD_NUMBER: int
        client_version: Text
        platform: Text
        def __init__(self,
            *,
            client_version: Text = ...,
            platform: Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: Literal["client_version",b"client_version","platform",b"platform"]) -> None: ...

    SERVICE_FIELD_NUMBER: int
    MODE_FIELD_NUMBER: int
    LOCALITY_FIELD_NUMBER: int
    SUBSETTING_OPTIONS_FIELD_NUMBER: int
    KNOWN_BALANCER_NAMES_FIELD_NUMBER: int
    CLIENT_INFO_FIELD_NUMBER: int
    service: Text
    mode: FilterMode.ValueType
    @property
    def locality(self) -> Locality: ...
    @property
    def subsetting_options(self) -> ApplicationRequest.SubsettingOptions: ...
    @property
    def known_balancer_names(self) -> RepeatedScalarFieldContainer[Text]: ...
    @property
    def client_info(self) -> ApplicationRequest.ClientInfo: ...
    def __init__(self,
        *,
        service: Text = ...,
        mode: FilterMode.ValueType = ...,
        locality: Optional[Locality] = ...,
        subsetting_options: Optional[ApplicationRequest.SubsettingOptions] = ...,
        known_balancer_names: Optional[Iterable[Text]] = ...,
        client_info: Optional[ApplicationRequest.ClientInfo] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["client_info",b"client_info","locality",b"locality","subsetting_options",b"subsetting_options"]) -> bool: ...
    def ClearField(self, field_name: Literal["client_info",b"client_info","known_balancer_names",b"known_balancer_names","locality",b"locality","mode",b"mode","service",b"service","subsetting_options",b"subsetting_options"]) -> None: ...


ApplicationResponse: ApplicationResponse

class ApplicationResponse(Message):
    DESCRIPTOR: Descriptor
    class Endpoint(Message):
        DESCRIPTOR: Descriptor
        class Mesh(Message):
            DESCRIPTOR: Descriptor
            NAME_FIELD_NUMBER: int
            WEIGHT_FIELD_NUMBER: int
            name: Text
            weight: int
            def __init__(self,
                *,
                name: Text = ...,
                weight: int = ...,
                ) -> None: ...
            def ClearField(self, field_name: Literal["name",b"name","weight",b"weight"]) -> None: ...

        HOST_PORT_FIELD_NUMBER: int
        POD_NAME_FIELD_NUMBER: int
        LOCALITY_FIELD_NUMBER: int
        MESH_OPTIONS_FIELD_NUMBER: int
        PRIORITY_FIELD_NUMBER: int
        host_port: Text
        pod_name: Text
        @property
        def locality(self) -> Locality: ...
        @property
        def mesh_options(self) -> RepeatedCompositeFieldContainer[ApplicationResponse.Endpoint.Mesh]: ...
        @property
        def priority(self) -> RepeatedScalarFieldContainer[Text]: ...
        def __init__(self,
            *,
            host_port: Text = ...,
            pod_name: Text = ...,
            locality: Optional[Locality] = ...,
            mesh_options: Optional[Iterable[ApplicationResponse.Endpoint.Mesh]] = ...,
            priority: Optional[Iterable[Text]] = ...,
            ) -> None: ...
        def HasField(self, field_name: Literal["locality",b"locality"]) -> bool: ...
        def ClearField(self, field_name: Literal["host_port",b"host_port","locality",b"locality","mesh_options",b"mesh_options","pod_name",b"pod_name","priority",b"priority"]) -> None: ...

    ENDPOINTS_FIELD_NUMBER: int
    SERVICE_CONFIG_FIELD_NUMBER: int
    UPDATE_INFO_FIELD_NUMBER: int
    @property
    def endpoints(self) -> RepeatedCompositeFieldContainer[ApplicationResponse.Endpoint]: ...
    service_config: Text
    @property
    def update_info(self) -> UpdateInfo: ...
    def __init__(self,
        *,
        endpoints: Optional[Iterable[ApplicationResponse.Endpoint]] = ...,
        service_config: Text = ...,
        update_info: Optional[UpdateInfo] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["update_info",b"update_info"]) -> bool: ...
    def ClearField(self, field_name: Literal["endpoints",b"endpoints","service_config",b"service_config","update_info",b"update_info"]) -> None: ...


ResourcePostgres: ResourcePostgres

class ResourcePostgres(Message):
    DESCRIPTOR: Descriptor
    class _Role:
        ValueType = NewType('ValueType', int)
        V: TypeAlias = ValueType
    class _RoleEnumTypeWrapper(EnumTypeWrapper[ResourcePostgres._Role.ValueType], type):
        DESCRIPTOR: EnumDescriptor
        Undefined: ResourcePostgres._Role.ValueType  # 0
        Master: ResourcePostgres._Role.ValueType  # 1
        Sync: ResourcePostgres._Role.ValueType  # 2
        Async: ResourcePostgres._Role.ValueType  # 3
        Archive: ResourcePostgres._Role.ValueType  # 4
    class Role(_Role, metaclass=_RoleEnumTypeWrapper):
        pass

    Undefined: ResourcePostgres.Role.ValueType  # 0
    Master: ResourcePostgres.Role.ValueType  # 1
    Sync: ResourcePostgres.Role.ValueType  # 2
    Async: ResourcePostgres.Role.ValueType  # 3
    Archive: ResourcePostgres.Role.ValueType  # 4

    def __init__(self,
        ) -> None: ...


ResourcePostgresRequest: ResourcePostgresRequest

class ResourcePostgresRequest(Message):
    DESCRIPTOR: Descriptor
    CLUSTER_FIELD_NUMBER: int
    MODE_FIELD_NUMBER: int
    LOCALITY_FIELD_NUMBER: int
    ROLES_FIELD_NUMBER: int
    cluster: Text
    mode: FilterMode.ValueType
    @property
    def locality(self) -> Locality: ...
    @property
    def roles(self) -> RepeatedScalarFieldContainer[ResourcePostgres.Role.ValueType]: ...
    def __init__(self,
        *,
        cluster: Text = ...,
        mode: FilterMode.ValueType = ...,
        locality: Optional[Locality] = ...,
        roles: Optional[Iterable[ResourcePostgres.Role.ValueType]] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["locality",b"locality"]) -> bool: ...
    def ClearField(self, field_name: Literal["cluster",b"cluster","locality",b"locality","mode",b"mode","roles",b"roles"]) -> None: ...


ResourcePostgresResponse: ResourcePostgresResponse

class ResourcePostgresResponse(Message):
    DESCRIPTOR: Descriptor
    class Endpoint(Message):
        DESCRIPTOR: Descriptor
        HOST_PORT_FIELD_NUMBER: int
        POD_NAME_FIELD_NUMBER: int
        ROLE_FIELD_NUMBER: int
        LOCALITY_FIELD_NUMBER: int
        host_port: Text
        pod_name: Text
        role: ResourcePostgres.Role.ValueType
        @property
        def locality(self) -> Locality: ...
        def __init__(self,
            *,
            host_port: Text = ...,
            pod_name: Text = ...,
            role: ResourcePostgres.Role.ValueType = ...,
            locality: Optional[Locality] = ...,
            ) -> None: ...
        def HasField(self, field_name: Literal["locality",b"locality"]) -> bool: ...
        def ClearField(self, field_name: Literal["host_port",b"host_port","locality",b"locality","pod_name",b"pod_name","role",b"role"]) -> None: ...

    ENDPOINTS_FIELD_NUMBER: int
    UPDATE_INFO_FIELD_NUMBER: int
    @property
    def endpoints(self) -> RepeatedCompositeFieldContainer[ResourcePostgresResponse.Endpoint]: ...
    @property
    def update_info(self) -> UpdateInfo: ...
    def __init__(self,
        *,
        endpoints: Optional[Iterable[ResourcePostgresResponse.Endpoint]] = ...,
        update_info: Optional[UpdateInfo] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["update_info",b"update_info"]) -> bool: ...
    def ClearField(self, field_name: Literal["endpoints",b"endpoints","update_info",b"update_info"]) -> None: ...


ResourceMSSQLRequest: ResourceMSSQLRequest

class ResourceMSSQLRequest(Message):
    DESCRIPTOR: Descriptor
    CLUSTER_FIELD_NUMBER: int
    MODE_FIELD_NUMBER: int
    LOCALITY_FIELD_NUMBER: int
    cluster: Text
    mode: FilterMode.ValueType
    @property
    def locality(self) -> Locality: ...
    def __init__(self,
        *,
        cluster: Text = ...,
        mode: FilterMode.ValueType = ...,
        locality: Optional[Locality] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["locality",b"locality"]) -> bool: ...
    def ClearField(self, field_name: Literal["cluster",b"cluster","locality",b"locality","mode",b"mode"]) -> None: ...


ResourceMSSQLResponse: ResourceMSSQLResponse

class ResourceMSSQLResponse(Message):
    DESCRIPTOR: Descriptor
    class _Role:
        ValueType = NewType('ValueType', int)
        V: TypeAlias = ValueType
    class _RoleEnumTypeWrapper(EnumTypeWrapper[ResourceMSSQLResponse._Role.ValueType], type):
        DESCRIPTOR: EnumDescriptor
        Undefined: ResourceMSSQLResponse._Role.ValueType  # 0
        Master: ResourceMSSQLResponse._Role.ValueType  # 1
        Sync: ResourceMSSQLResponse._Role.ValueType  # 2
        Async: ResourceMSSQLResponse._Role.ValueType  # 3
    class Role(_Role, metaclass=_RoleEnumTypeWrapper):
        pass

    Undefined: ResourceMSSQLResponse.Role.ValueType  # 0
    Master: ResourceMSSQLResponse.Role.ValueType  # 1
    Sync: ResourceMSSQLResponse.Role.ValueType  # 2
    Async: ResourceMSSQLResponse.Role.ValueType  # 3

    class Endpoint(Message):
        DESCRIPTOR: Descriptor
        HOST_PORT_FIELD_NUMBER: int
        POD_NAME_FIELD_NUMBER: int
        ROLE_FIELD_NUMBER: int
        host_port: Text
        pod_name: Text
        role: ResourceMSSQLResponse.Role.ValueType
        def __init__(self,
            *,
            host_port: Text = ...,
            pod_name: Text = ...,
            role: ResourceMSSQLResponse.Role.ValueType = ...,
            ) -> None: ...
        def ClearField(self, field_name: Literal["host_port",b"host_port","pod_name",b"pod_name","role",b"role"]) -> None: ...

    ENDPOINTS_FIELD_NUMBER: int
    UPDATE_INFO_FIELD_NUMBER: int
    @property
    def endpoints(self) -> RepeatedCompositeFieldContainer[ResourceMSSQLResponse.Endpoint]: ...
    @property
    def update_info(self) -> UpdateInfo: ...
    def __init__(self,
        *,
        endpoints: Optional[Iterable[ResourceMSSQLResponse.Endpoint]] = ...,
        update_info: Optional[UpdateInfo] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["update_info",b"update_info"]) -> bool: ...
    def ClearField(self, field_name: Literal["endpoints",b"endpoints","update_info",b"update_info"]) -> None: ...


ResourcePostgresShardedRequest: ResourcePostgresShardedRequest

class ResourcePostgresShardedRequest(Message):
    DESCRIPTOR: Descriptor
    CLUSTER_FIELD_NUMBER: int
    LOCALITY_FIELD_NUMBER: int
    ROLES_FIELD_NUMBER: int
    cluster: Text
    @property
    def locality(self) -> Locality: ...
    @property
    def roles(self) -> RepeatedScalarFieldContainer[ResourcePostgres.Role.ValueType]: ...
    def __init__(self,
        *,
        cluster: Text = ...,
        locality: Optional[Locality] = ...,
        roles: Optional[Iterable[ResourcePostgres.Role.ValueType]] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["locality",b"locality"]) -> bool: ...
    def ClearField(self, field_name: Literal["cluster",b"cluster","locality",b"locality","roles",b"roles"]) -> None: ...


ResourcePostgresShardedResponse: ResourcePostgresShardedResponse

class ResourcePostgresShardedResponse(Message):
    DESCRIPTOR: Descriptor
    class Shard(Message):
        DESCRIPTOR: Descriptor
        class Endpoint(Message):
            DESCRIPTOR: Descriptor
            HOST_PORT_FIELD_NUMBER: int
            POD_NAME_FIELD_NUMBER: int
            ROLE_FIELD_NUMBER: int
            LOCALITY_FIELD_NUMBER: int
            host_port: Text
            pod_name: Text
            role: ResourcePostgres.Role.ValueType
            @property
            def locality(self) -> Locality: ...
            def __init__(self,
                *,
                host_port: Text = ...,
                pod_name: Text = ...,
                role: ResourcePostgres.Role.ValueType = ...,
                locality: Optional[Locality] = ...,
                ) -> None: ...
            def HasField(self, field_name: Literal["locality",b"locality"]) -> bool: ...
            def ClearField(self, field_name: Literal["host_port",b"host_port","locality",b"locality","pod_name",b"pod_name","role",b"role"]) -> None: ...

        ID_FIELD_NUMBER: int
        ENDPOINTS_FIELD_NUMBER: int
        NAME_FIELD_NUMBER: int
        id: int
        @property
        def endpoints(self) -> RepeatedCompositeFieldContainer[ResourcePostgresShardedResponse.Shard.Endpoint]: ...
        name: Text
        def __init__(self,
            *,
            id: int = ...,
            endpoints: Optional[Iterable[ResourcePostgresShardedResponse.Shard.Endpoint]] = ...,
            name: Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: Literal["endpoints",b"endpoints","id",b"id","name",b"name"]) -> None: ...

    class BucketRange(Message):
        DESCRIPTOR: Descriptor
        SHARD_ID_FIELD_NUMBER: int
        START_FIELD_NUMBER: int
        END_FIELD_NUMBER: int
        shard_id: int
        start: int
        end: int
        def __init__(self,
            *,
            shard_id: int = ...,
            start: int = ...,
            end: int = ...,
            ) -> None: ...
        def ClearField(self, field_name: Literal["end",b"end","shard_id",b"shard_id","start",b"start"]) -> None: ...

    SHARDS_FIELD_NUMBER: int
    BUCKETS_FIELD_NUMBER: int
    UPDATE_INFO_FIELD_NUMBER: int
    @property
    def shards(self) -> RepeatedCompositeFieldContainer[ResourcePostgresShardedResponse.Shard]: ...
    @property
    def buckets(self) -> RepeatedCompositeFieldContainer[ResourcePostgresShardedResponse.BucketRange]: ...
    @property
    def update_info(self) -> UpdateInfo: ...
    def __init__(self,
        *,
        shards: Optional[Iterable[ResourcePostgresShardedResponse.Shard]] = ...,
        buckets: Optional[Iterable[ResourcePostgresShardedResponse.BucketRange]] = ...,
        update_info: Optional[UpdateInfo] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["update_info",b"update_info"]) -> bool: ...
    def ClearField(self, field_name: Literal["buckets",b"buckets","shards",b"shards","update_info",b"update_info"]) -> None: ...


ResourcePostgresShardedRequestV2: ResourcePostgresShardedRequestV2

class ResourcePostgresShardedRequestV2(Message):
    DESCRIPTOR: Descriptor
    CLUSTER_FIELD_NUMBER: int
    LOCALITY_FIELD_NUMBER: int
    ROLES_FIELD_NUMBER: int
    cluster: Text
    @property
    def locality(self) -> Locality: ...
    @property
    def roles(self) -> RepeatedScalarFieldContainer[ResourcePostgres.Role.ValueType]: ...
    def __init__(self,
        *,
        cluster: Text = ...,
        locality: Optional[Locality] = ...,
        roles: Optional[Iterable[ResourcePostgres.Role.ValueType]] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["locality",b"locality"]) -> bool: ...
    def ClearField(self, field_name: Literal["cluster",b"cluster","locality",b"locality","roles",b"roles"]) -> None: ...


ResourcePostgresShardedResponseV2: ResourcePostgresShardedResponseV2

class ResourcePostgresShardedResponseV2(Message):
    DESCRIPTOR: Descriptor
    class Shard(Message):
        DESCRIPTOR: Descriptor
        class Endpoint(Message):
            DESCRIPTOR: Descriptor
            HOST_PORT_FIELD_NUMBER: int
            POD_NAME_FIELD_NUMBER: int
            ROLE_FIELD_NUMBER: int
            LOCALITY_FIELD_NUMBER: int
            PORT_FIELD_NUMBER: int
            host_port: Text
            pod_name: Text
            role: ResourcePostgres.Role.ValueType
            @property
            def locality(self) -> Locality: ...
            port: Text
            def __init__(self,
                *,
                host_port: Text = ...,
                pod_name: Text = ...,
                role: ResourcePostgres.Role.ValueType = ...,
                locality: Optional[Locality] = ...,
                port: Text = ...,
                ) -> None: ...
            def HasField(self, field_name: Literal["locality",b"locality"]) -> bool: ...
            def ClearField(self, field_name: Literal["host_port",b"host_port","locality",b"locality","pod_name",b"pod_name","port",b"port","role",b"role"]) -> None: ...

        ID_FIELD_NUMBER: int
        ENDPOINTS_FIELD_NUMBER: int
        NAME_FIELD_NUMBER: int
        id: int
        @property
        def endpoints(self) -> RepeatedCompositeFieldContainer[ResourcePostgresShardedResponseV2.Shard.Endpoint]: ...
        name: Text
        def __init__(self,
            *,
            id: int = ...,
            endpoints: Optional[Iterable[ResourcePostgresShardedResponseV2.Shard.Endpoint]] = ...,
            name: Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: Literal["endpoints",b"endpoints","id",b"id","name",b"name"]) -> None: ...

    class BucketRange(Message):
        DESCRIPTOR: Descriptor
        SHARD_ID_FIELD_NUMBER: int
        START_FIELD_NUMBER: int
        END_FIELD_NUMBER: int
        shard_id: int
        start: int
        end: int
        def __init__(self,
            *,
            shard_id: int = ...,
            start: int = ...,
            end: int = ...,
            ) -> None: ...
        def ClearField(self, field_name: Literal["end",b"end","shard_id",b"shard_id","start",b"start"]) -> None: ...

    SHARDS_FIELD_NUMBER: int
    BUCKETS_FIELD_NUMBER: int
    UPDATE_INFO_FIELD_NUMBER: int
    @property
    def shards(self) -> RepeatedCompositeFieldContainer[ResourcePostgresShardedResponseV2.Shard]: ...
    @property
    def buckets(self) -> RepeatedCompositeFieldContainer[ResourcePostgresShardedResponseV2.BucketRange]: ...
    @property
    def update_info(self) -> UpdateInfo: ...
    def __init__(self,
        *,
        shards: Optional[Iterable[ResourcePostgresShardedResponseV2.Shard]] = ...,
        buckets: Optional[Iterable[ResourcePostgresShardedResponseV2.BucketRange]] = ...,
        update_info: Optional[UpdateInfo] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["update_info",b"update_info"]) -> bool: ...
    def ClearField(self, field_name: Literal["buckets",b"buckets","shards",b"shards","update_info",b"update_info"]) -> None: ...


ResourceRedis: ResourceRedis

class ResourceRedis(Message):
    DESCRIPTOR: Descriptor
    class _Role:
        ValueType = NewType('ValueType', int)
        V: TypeAlias = ValueType
    class _RoleEnumTypeWrapper(EnumTypeWrapper[ResourceRedis._Role.ValueType], type):
        DESCRIPTOR: EnumDescriptor
        Undefined: ResourceRedis._Role.ValueType  # 0
        Master: ResourceRedis._Role.ValueType  # 1
        Slave: ResourceRedis._Role.ValueType  # 2
    class Role(_Role, metaclass=_RoleEnumTypeWrapper):
        pass

    Undefined: ResourceRedis.Role.ValueType  # 0
    Master: ResourceRedis.Role.ValueType  # 1
    Slave: ResourceRedis.Role.ValueType  # 2

    def __init__(self,
        ) -> None: ...


ResourceRedisShardedRequest: ResourceRedisShardedRequest

class ResourceRedisShardedRequest(Message):
    DESCRIPTOR: Descriptor
    CLUSTER_FIELD_NUMBER: int
    LOCALITY_FIELD_NUMBER: int
    MODE_FIELD_NUMBER: int
    ROLES_FIELD_NUMBER: int
    cluster: Text
    @property
    def locality(self) -> Locality: ...
    mode: FilterMode.ValueType
    @property
    def roles(self) -> RepeatedScalarFieldContainer[ResourceRedis.Role.ValueType]: ...
    def __init__(self,
        *,
        cluster: Text = ...,
        locality: Optional[Locality] = ...,
        mode: FilterMode.ValueType = ...,
        roles: Optional[Iterable[ResourceRedis.Role.ValueType]] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["locality",b"locality"]) -> bool: ...
    def ClearField(self, field_name: Literal["cluster",b"cluster","locality",b"locality","mode",b"mode","roles",b"roles"]) -> None: ...


ResourceRedisShardedResponse: ResourceRedisShardedResponse

class ResourceRedisShardedResponse(Message):
    DESCRIPTOR: Descriptor
    class Shard(Message):
        DESCRIPTOR: Descriptor
        class Endpoint(Message):
            DESCRIPTOR: Descriptor
            HOST_PORT_FIELD_NUMBER: int
            POD_NAME_FIELD_NUMBER: int
            ROLE_FIELD_NUMBER: int
            LOCALITY_FIELD_NUMBER: int
            host_port: Text
            pod_name: Text
            role: ResourceRedis.Role.ValueType
            @property
            def locality(self) -> Locality: ...
            def __init__(self,
                *,
                host_port: Text = ...,
                pod_name: Text = ...,
                role: ResourceRedis.Role.ValueType = ...,
                locality: Optional[Locality] = ...,
                ) -> None: ...
            def HasField(self, field_name: Literal["locality",b"locality"]) -> bool: ...
            def ClearField(self, field_name: Literal["host_port",b"host_port","locality",b"locality","pod_name",b"pod_name","role",b"role"]) -> None: ...

        ID_FIELD_NUMBER: int
        ENDPOINTS_FIELD_NUMBER: int
        id: int
        @property
        def endpoints(self) -> RepeatedCompositeFieldContainer[ResourceRedisShardedResponse.Shard.Endpoint]: ...
        def __init__(self,
            *,
            id: int = ...,
            endpoints: Optional[Iterable[ResourceRedisShardedResponse.Shard.Endpoint]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: Literal["endpoints",b"endpoints","id",b"id"]) -> None: ...

    SHARDS_FIELD_NUMBER: int
    UPDATE_INFO_FIELD_NUMBER: int
    @property
    def shards(self) -> RepeatedCompositeFieldContainer[ResourceRedisShardedResponse.Shard]: ...
    @property
    def update_info(self) -> UpdateInfo: ...
    def __init__(self,
        *,
        shards: Optional[Iterable[ResourceRedisShardedResponse.Shard]] = ...,
        update_info: Optional[UpdateInfo] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["update_info",b"update_info"]) -> bool: ...
    def ClearField(self, field_name: Literal["shards",b"shards","update_info",b"update_info"]) -> None: ...


ResourceKafkaRequest: ResourceKafkaRequest

class ResourceKafkaRequest(Message):
    DESCRIPTOR: Descriptor
    class _AuthType:
        ValueType = NewType('ValueType', int)
        V: TypeAlias = ValueType
    class _AuthTypeEnumTypeWrapper(EnumTypeWrapper[ResourceKafkaRequest._AuthType.ValueType], type):
        DESCRIPTOR: EnumDescriptor
        Undefined: ResourceKafkaRequest._AuthType.ValueType  # 0
        Plaintext: ResourceKafkaRequest._AuthType.ValueType  # 1
        SaslPlaintext: ResourceKafkaRequest._AuthType.ValueType  # 2
        Ssl: ResourceKafkaRequest._AuthType.ValueType  # 3
        SaslSsl: ResourceKafkaRequest._AuthType.ValueType  # 4
    class AuthType(_AuthType, metaclass=_AuthTypeEnumTypeWrapper):
        pass

    Undefined: ResourceKafkaRequest.AuthType.ValueType  # 0
    Plaintext: ResourceKafkaRequest.AuthType.ValueType  # 1
    SaslPlaintext: ResourceKafkaRequest.AuthType.ValueType  # 2
    Ssl: ResourceKafkaRequest.AuthType.ValueType  # 3
    SaslSsl: ResourceKafkaRequest.AuthType.ValueType  # 4

    CLUSTER_FIELD_NUMBER: int
    AUTH_FIELD_NUMBER: int
    cluster: Text
    auth: ResourceKafkaRequest.AuthType.ValueType
    def __init__(self,
        *,
        cluster: Text = ...,
        auth: ResourceKafkaRequest.AuthType.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal["auth",b"auth","cluster",b"cluster"]) -> None: ...


ResourceKafkaResponse: ResourceKafkaResponse

class ResourceKafkaResponse(Message):
    DESCRIPTOR: Descriptor
    class Endpoint(Message):
        DESCRIPTOR: Descriptor
        HOST_PORT_FIELD_NUMBER: int
        host_port: Text
        def __init__(self,
            *,
            host_port: Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: Literal["host_port",b"host_port"]) -> None: ...

    ENDPOINTS_FIELD_NUMBER: int
    @property
    def endpoints(self) -> RepeatedCompositeFieldContainer[ResourceKafkaResponse.Endpoint]: ...
    def __init__(self,
        *,
        endpoints: Optional[Iterable[ResourceKafkaResponse.Endpoint]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal["endpoints",b"endpoints"]) -> None: ...


ResourceEtcdRequest: ResourceEtcdRequest

class ResourceEtcdRequest(Message):
    DESCRIPTOR: Descriptor
    class _AuthType:
        ValueType = NewType('ValueType', int)
        V: TypeAlias = ValueType
    class _AuthTypeEnumTypeWrapper(EnumTypeWrapper[ResourceEtcdRequest._AuthType.ValueType], type):
        DESCRIPTOR: EnumDescriptor
        Undefined: ResourceEtcdRequest._AuthType.ValueType  # 0
        Plaintext: ResourceEtcdRequest._AuthType.ValueType  # 1
        Oauth: ResourceEtcdRequest._AuthType.ValueType  # 2
        Cert: ResourceEtcdRequest._AuthType.ValueType  # 3
    class AuthType(_AuthType, metaclass=_AuthTypeEnumTypeWrapper):
        pass

    Undefined: ResourceEtcdRequest.AuthType.ValueType  # 0
    Plaintext: ResourceEtcdRequest.AuthType.ValueType  # 1
    Oauth: ResourceEtcdRequest.AuthType.ValueType  # 2
    Cert: ResourceEtcdRequest.AuthType.ValueType  # 3

    CLUSTER_FIELD_NUMBER: int
    AUTH_FIELD_NUMBER: int
    cluster: Text
    auth: ResourceEtcdRequest.AuthType.ValueType
    def __init__(self,
        *,
        cluster: Text = ...,
        auth: ResourceEtcdRequest.AuthType.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal["auth",b"auth","cluster",b"cluster"]) -> None: ...


ResourceEtcdResponse: ResourceEtcdResponse

class ResourceEtcdResponse(Message):
    DESCRIPTOR: Descriptor
    class Endpoint(Message):
        DESCRIPTOR: Descriptor
        HOST_PORT_FIELD_NUMBER: int
        host_port: Text
        def __init__(self,
            *,
            host_port: Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: Literal["host_port",b"host_port"]) -> None: ...

    ENDPOINTS_FIELD_NUMBER: int
    @property
    def endpoints(self) -> RepeatedCompositeFieldContainer[ResourceEtcdResponse.Endpoint]: ...
    def __init__(self,
        *,
        endpoints: Optional[Iterable[ResourceEtcdResponse.Endpoint]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal["endpoints",b"endpoints"]) -> None: ...
