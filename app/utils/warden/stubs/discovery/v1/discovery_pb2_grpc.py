# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

try:  # patched
    from . import discovery_pb2 as warden_dot_discovery_dot_v1_dot_discovery__pb2  # patched
    from .discovery_pb2 import *  # patched
except ImportError:  # patched
    from ozbalance.warden.stubs.warden.discovery.v1 import discovery_pb2 as warden_dot_discovery_dot_v1_dot_discovery__pb2  # patched
    from ozbalance.warden.stubs.warden.discovery.v1.discovery_pb2 import *  # patched


class DiscoveryServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Neighbours = channel.unary_stream(
                '/ozon.platform.warden.api.discovery.v1.DiscoveryService/Neighbours',
                request_serializer=warden_dot_discovery_dot_v1_dot_discovery__pb2.NeighboursRequest.SerializeToString,
                response_deserializer=warden_dot_discovery_dot_v1_dot_discovery__pb2.NeighboursResponse.FromString,
                )
        self.MeshInfo = channel.unary_stream(
                '/ozon.platform.warden.api.discovery.v1.DiscoveryService/MeshInfo',
                request_serializer=warden_dot_discovery_dot_v1_dot_discovery__pb2.MeshInfoRequest.SerializeToString,
                response_deserializer=warden_dot_discovery_dot_v1_dot_discovery__pb2.MeshInfoResponse.FromString,
                )


class DiscoveryServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Neighbours(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MeshInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DiscoveryServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Neighbours': grpc.unary_stream_rpc_method_handler(
                    servicer.Neighbours,
                    request_deserializer=warden_dot_discovery_dot_v1_dot_discovery__pb2.NeighboursRequest.FromString,
                    response_serializer=warden_dot_discovery_dot_v1_dot_discovery__pb2.NeighboursResponse.SerializeToString,
            ),
            'MeshInfo': grpc.unary_stream_rpc_method_handler(
                    servicer.MeshInfo,
                    request_deserializer=warden_dot_discovery_dot_v1_dot_discovery__pb2.MeshInfoRequest.FromString,
                    response_serializer=warden_dot_discovery_dot_v1_dot_discovery__pb2.MeshInfoResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ozon.platform.warden.api.discovery.v1.DiscoveryService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DiscoveryService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Neighbours(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ozon.platform.warden.api.discovery.v1.DiscoveryService/Neighbours',
            warden_dot_discovery_dot_v1_dot_discovery__pb2.NeighboursRequest.SerializeToString,
            warden_dot_discovery_dot_v1_dot_discovery__pb2.NeighboursResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MeshInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ozon.platform.warden.api.discovery.v1.DiscoveryService/MeshInfo',
            warden_dot_discovery_dot_v1_dot_discovery__pb2.MeshInfoRequest.SerializeToString,
            warden_dot_discovery_dot_v1_dot_discovery__pb2.MeshInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
