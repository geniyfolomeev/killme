"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
from builtins import (
    bool,
    int,
)

from google.protobuf.descriptor import (
    Descriptor,
    FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer,
)

from google.protobuf.message import (
    Message,
)

from typing import (
    Iterable,
    Optional,
    Text,
    overload,
)

from typing_extensions import (
    Literal,
)


DESCRIPTOR: FileDescriptor


NeighboursRequest: NeighboursRequest

class NeighboursRequest(Message):
    DESCRIPTOR: Descriptor
    SERVICE_FIELD_NUMBER: int
    ZONE_FIELD_NUMBER: int
    VERSION_FIELD_NUMBER: int
    service: Text
    zone: Text
    version: Text
    def __init__(self,
        *,
        service: Optional[Text] = ...,
        zone: Optional[Text] = ...,
        version: Optional[Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["_service",b"_service","_version",b"_version","_zone",b"_zone","service",b"service","version",b"version","zone",b"zone"]) -> bool: ...
    def ClearField(self, field_name: Literal["_service",b"_service","_version",b"_version","_zone",b"_zone","service",b"service","version",b"version","zone",b"zone"]) -> None: ...
    @overload
    def WhichOneof(self, oneof_group: Literal["_service",b"_service"]) -> Optional[Literal["service"]]: ...
    @overload
    def WhichOneof(self, oneof_group: Literal["_version",b"_version"]) -> Optional[Literal["version"]]: ...
    @overload
    def WhichOneof(self, oneof_group: Literal["_zone",b"_zone"]) -> Optional[Literal["zone"]]: ...


NeighboursResponse: NeighboursResponse

class NeighboursResponse(Message):
    DESCRIPTOR: Descriptor
    class Location(Message):
        DESCRIPTOR: Descriptor
        ZONE_FIELD_NUMBER: int
        SUB_ZONE_FIELD_NUMBER: int
        zone: Text
        sub_zone: Text
        def __init__(self,
            *,
            zone: Text = ...,
            sub_zone: Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: Literal["sub_zone",b"sub_zone","zone",b"zone"]) -> None: ...

    class Endpoint(Message):
        DESCRIPTOR: Descriptor
        HOST_PORT_FIELD_NUMBER: int
        POD_NAME_FIELD_NUMBER: int
        LOCATION_FIELD_NUMBER: int
        IS_READY_FIELD_NUMBER: int
        DEFAULT_ROUTE_WEIGHT_FIELD_NUMBER: int
        VERSION_FIELD_NUMBER: int
        host_port: Text
        pod_name: Text
        @property
        def location(self) -> NeighboursResponse.Location: ...
        is_ready: bool
        default_route_weight: int
        version: Text
        def __init__(self,
            *,
            host_port: Text = ...,
            pod_name: Text = ...,
            location: Optional[NeighboursResponse.Location] = ...,
            is_ready: bool = ...,
            default_route_weight: int = ...,
            version: Text = ...,
            ) -> None: ...
        def HasField(self, field_name: Literal["location",b"location"]) -> bool: ...
        def ClearField(self, field_name: Literal["default_route_weight",b"default_route_weight","host_port",b"host_port","is_ready",b"is_ready","location",b"location","pod_name",b"pod_name","version",b"version"]) -> None: ...

    ENDPOINTS_FIELD_NUMBER: int
    VERSIONS_FIELD_NUMBER: int
    @property
    def endpoints(self) -> RepeatedCompositeFieldContainer[NeighboursResponse.Endpoint]: ...
    @property
    def versions(self) -> RepeatedScalarFieldContainer[Text]: ...
    def __init__(self,
        *,
        endpoints: Optional[Iterable[NeighboursResponse.Endpoint]] = ...,
        versions: Optional[Iterable[Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal["endpoints",b"endpoints","versions",b"versions"]) -> None: ...


MeshInfoRequest: MeshInfoRequest

class MeshInfoRequest(Message):
    DESCRIPTOR: Descriptor
    def __init__(self,
        ) -> None: ...


MeshInfoResponse: MeshInfoResponse

class MeshInfoResponse(Message):
    DESCRIPTOR: Descriptor
    DEFAULT_ROUTE_WEIGHT_FIELD_NUMBER: int
    VERSION_FIELD_NUMBER: int
    default_route_weight: int
    version: Text
    def __init__(self,
        *,
        default_route_weight: int = ...,
        version: Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal["default_route_weight",b"default_route_weight","version",b"version"]) -> None: ...
